{"ast":null,"code":"var _jsxFileName = \"/media/raj/Backup Data/raj/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DisplayBox from './display';\nimport Login from './login';\nimport Regsiter from './register';\nimport Formfield from './from_field';\nimport Home from './home/home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(TestComponent, {\n  title: \"Test Title\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 5\n}, this));\nfunction Counter() {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You clicked (count) times\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","ReactDOM","App","reportWebVitals","DisplayBox","Login","Regsiter","Formfield","Home","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","TestComponent","title","fileName","_jsxFileName","lineNumber","columnNumber","Counter","_s","count","setCount","children","onClick","_c","$RefreshReg$"],"sources":["/media/raj/Backup Data/raj/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DisplayBox from './display';\nimport Login from './login';\nimport Regsiter from './register';\nimport Formfield from './from_field';\nimport Home from './home/home';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <TestComponent title=\"Test Title\" />\n);\nfunction Counter(){\n  const [count, setCount]=useState(0);\n  return(\n    <div>\n      <p>You clicked (count) times</p>\n      <button onClick={()=> setCount(count+1)}>\n        Click me\n      </button>\n    </div>\n  )\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,WAAW;AAClC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACPL,OAAA,CAACM,aAAa;EAACC,KAAK,EAAC;AAAY;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACvC,CAAC;AACD,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACzB,QAAQ,CAAC,CAAC,CAAC;EACnC,oBACEU,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAG;IAAyB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCX,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAKF,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAE;MAAAE,QAAA,EAAC;IAEzC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AACA;AACA;AACA;AAAAE,EAAA,CAbSD,OAAO;AAAAM,EAAA,GAAPN,OAAO;AAchBnB,eAAe,CAAC,CAAC;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}